/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 ./public/chest.glb -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
    mesh_0_1: THREE.Mesh;
    ['Mesh_lid_(%high)_Instance']: THREE.Mesh;
    ['Mesh_lid_(%high)_Instance_1']: THREE.Mesh;
  };
  materials: {
    brown: THREE.MeshStandardMaterial;
    ['grey-light']: THREE.MeshStandardMaterial;
  };
};

export function Chest(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/chest.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.mesh_0.geometry} material={materials.brown} />
      <mesh
        geometry={nodes.mesh_0_1.geometry}
        material={materials['grey-light']}
      />
      <group position={[0, 0.2, 0.2]}>
        <mesh
          geometry={nodes['Mesh_lid_(%high)_Instance'].geometry}
          material={materials['grey-light']}
        />
        <mesh
          geometry={nodes['Mesh_lid_(%high)_Instance_1'].geometry}
          material={materials.brown}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/chest.glb');
