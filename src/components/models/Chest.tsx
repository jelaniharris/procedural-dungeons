/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 ./public/models/items/chest.glb -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    chest_1: THREE.Mesh;
    lid: THREE.Mesh;
  };
  materials: {
    colormap: THREE.MeshStandardMaterial;
  };
};

//type ActionName = 'open' | 'close' | 'open-close'
//type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Chest(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials /*, animations*/ } = useGLTF(
    '/chest.glb'
  ) as GLTFResult;
  //const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="chest">
        <mesh
          name="chest_1"
          geometry={nodes.chest_1.geometry}
          material={materials.colormap}
        >
          <mesh
            name="lid"
            geometry={nodes.lid.geometry}
            material={materials.colormap}
            position={[0, 0.2, -0.2]}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload('/chest.glb');
