/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 .\public\models\environment\LiquidWall-All.glb -t 
*/

import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';
import { LiquidType } from '../types/GameTypes';
import { useLiquidSpriteSheet } from './useLiquidSpriteSheet';

type GLTFResult = GLTF & {
  nodes: {
    ['Liquid-All']: THREE.Mesh;
    LiquidFloor: THREE.Mesh;
  };
  materials: {
    colormap: THREE.MeshStandardMaterial;
    liquids: THREE.MeshStandardMaterial;
  };
};

export type LiquidProps = JSX.IntrinsicElements['group'] & {
  liquidType: LiquidType;
};

export function LiquidWallAll(props: LiquidProps) {
  const { spriteSheet } = useLiquidSpriteSheet(props.liquidType);

  const { nodes, materials } = useGLTF(
    '/models/environment/LiquidWall-All.glb'
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes['Liquid-All'].geometry}
        material={materials.colormap}
      />
      <mesh
        rotation={[THREE.MathUtils.degToRad(270), 0, 0]}
        position={[0, -0.25, 0]}
      >
        <planeGeometry attach="geometry" args={[1, 1]} />
        <meshBasicMaterial
          attach="material"
          side={THREE.FrontSide}
          map={spriteSheet}
          transparent
        />
      </mesh>
    </group>
  );
}

useGLTF.preload('/models/environment/LiquidWall-All.glb');
