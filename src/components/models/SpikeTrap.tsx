/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 .\public\models\traps\trap.glb -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF /*, useAnimations*/ } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    trap_1: THREE.Mesh;
    spikes: THREE.Mesh;
  };
  materials: {
    colormap: THREE.MeshStandardMaterial;
  };
};

type SpikeTrap = JSX.IntrinsicElements['group'];

//type ActionName = 'show' | 'hide' | 'show-hide'
//type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function SpikeTrap(props: SpikeTrap) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials /*, animations*/ } = useGLTF(
    '/modesl/traps/trap.glb'
  ) as GLTFResult;
  //const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="trap">
        <mesh
          name="trap_1"
          geometry={nodes.trap_1.geometry}
          material={materials.colormap}
        >
          <mesh
            name="spikes"
            geometry={nodes.spikes.geometry}
            material={materials.colormap}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload('/models/traps/trap.glb');
