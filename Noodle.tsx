/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 .\public\models\characters\Noodle.glb -t 
*/

import { useAnimations, useGLTF } from '@react-three/drei';
import React, { useRef } from 'react';
import * as THREE from 'three';

type GLTFActions = Record<ActionName, THREE.AnimationAction>;

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']
  >
>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF('/Noodle.glb') as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Snake">
          <group name="Armature" scale={0.225}>
            <primitive object={nodes.Root} />
          </group>
          <skinnedMesh
            name="SnakeBody"
            geometry={nodes.SnakeBody.geometry}
            material={materials.colormap}
            skeleton={nodes.SnakeBody.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/Noodle.glb');
